const mix = require('laravel-mix');
            require('mix-tailwindcss');
            require('laravel-mix-wp-blocks');
            require('laravel-mix-purgecss');
            require('laravel-mix-copy-watched');

const { whitelist, whitelistPatterns } = require('purgecss-with-wordpress');

/*
 |--------------------------------------------------------------------------
 | Mix Asset Management
 |--------------------------------------------------------------------------
 |
 | Mix provides a clean, fluent API for defining some Webpack build steps
 | for your Sage application. By default, we are compiling the Sass file
 | for your application, as well as bundling up your JS files.
 |
 */

mix.setPublicPath('./dist')
  .browserSync({
    proxy: 'example.test',
    port: '1987',
  });

mix.sass('resources/assets/styles/app.scss', 'styles')
   .sass('resources/assets/styles/editor.scss', 'styles')
   .tailwind('./../stage/tailwind.config.js')
   .purgeCss();

mix.js('resources/assets/scripts/app.js', 'scripts')
   .js('resources/assets/scripts/customizer.js', 'scripts')
   .blocks('resources/assets/scripts/editor.js', 'scripts')
   .extract();

mix.copyWatched('resources/assets/images', 'dist/images')
   .copyWatched('resources/assets/icons', 'dist/icons')
   .copyWatched('resources/assets/fonts', 'dist/fonts')
   .copyWatched('resources/languages', 'dist/languages');

mix.autoload({
  jquery: ['$', 'window.jQuery'],
  stage: ['stage', 'window.stage'],
});

mix.options({
  processCssUrls: false,
});

mix.sourceMaps(false, 'source-map')
   .version();

// Remove unused styles in production
mix.purgeCss({
  content: [
    './app/**/*.php',
    '../stage/include/**/*.php',
    './resources/views/**/*.php',
    '../stage/resources/views/**/*.php',
    './resources/assets/**/*.js',
    '../stage/resources/assets/**/*.js',
  ],
  defaultExtractor: content => content.match(/[A-Za-z0-9-_:/]+/g) || [],

  /*
   | Add classes, IDs, or selectors which do not exist in your views or
   | scripts. By default, we have whitelisted classes generated by WordPress and used by Stage.
   */
  whitelist: [
    'up',
    'down',
    'cite',
    'figure',
    'overlay',
    'active',
    'grid-item',
    'post-inner',
    'featured-image',
    'image-container',
    'off-canvas-menu',
    ...whitelist,
  ],

  whitelistPatterns: [
    /^wp(-.*)?$/,
    /^is(-.*)?$/,
    /^has(-.*)?$/,
    /^align(.*)?$/,
    /^blocks(-.*)?$/,
    /^stage(-.*)?$/,
    ...whitelistPatterns,
  ],
});
